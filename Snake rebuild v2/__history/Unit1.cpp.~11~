#include "Unit1.h"
#include "Unit2.h"
#include "Unit3.h"

#include <vcl.h>
#include <stdlib.h>
#include <vector>
#pragma comment(lib, "winmm.lib")
#pragma hdrstop
#pragma package(smart_init)
#pragma resource "*.dfm"


TForm1 *Form1;

 __fastcall TForm1::TForm1(TComponent* Owner)
	: TForm(Owner)
{

}

int x, y, dx, dy, len, score;
int snake[100][2];
bool gameover;
int apple_x, apple_y;

void spawn_apple() {
    apple_x = rand() % Form1->StringGrid1->ColCount;
    apple_y = rand() % Form1->StringGrid1->RowCount;
    Form1->StringGrid1->Cells[apple_x][apple_y] = "A";
}

void new_game() {
    x = 10; y = 10; dx = 1; dy = 0; len = 5; score = 0;
    for (int i = 0; i < len; i++) {
        snake[i][0] = x - i;
        snake[i][1] = y;
    }
	gameover = false;
    Form1->Timer1->Enabled = true;
    spawn_apple(); // Спавним первое яблоко
}

void game_over() {
    Form1->Timer1->Enabled = false;
    gameover = true;
    ShowMessage("Game Over! Your score: " + IntToStr(score));
}

void move_snake() {
    for (int i = len - 1; i > 0; i--) {
        snake[i][0] = snake[i - 1][0];
        snake[i][1] = snake[i - 1][1];
    }
    snake[0][0] = x;
    snake[0][1] = y;
}

void draw_snake() {
    for (int i = 0; i < len; i++) {
        Form1->StringGrid1->Cells[snake[i][0]][snake[i][1]] = "S";
    }
}

void clear_snake() {
    for (int i = 0; i < len; i++) {
        Form1->StringGrid1->Cells[snake[i][0]][snake[i][1]] = "";
    }
}

void check_collision() {
    if (x < 0 || x >= Form1->StringGrid1->ColCount || y < 0 || y >= Form1->StringGrid1->RowCount) {
        game_over();
    }
    for (int i = 1; i < len; i++) {
        if (snake[i][0] == x && snake[i][1] == y) {
            game_over();
        }
    }
}

void eat_apple() {
    if (x == apple_x && y == apple_y) {
        score++;
        len++;
        // Добавляем новый элемент в хвост змейки
        for (int i = len - 1; i > 0; i--) {
            snake[i][0] = snake[i - 1][0];
            snake[i][1] = snake[i - 1][1];
        }
        // Перемещаем голову змейки на место яблока
        snake[0][0] = apple_x;
        snake[0][1] = apple_y;
        spawn_apple();
    }
}

void __fastcall TForm1::Timer1Timer(TObject *Sender)
{
clear_snake();
    x += dx;
    y += dy;
    eat_apple();
    if (!gameover) {
        move_snake();
        draw_snake();
	}
}

void __fastcall TForm1::FormKeyUp(TObject *Sender, WORD &Key, TShiftState Shift)
{

	switch (Key) {
		case VK_UP: dx = 0; dy = -1; break;
        case VK_DOWN: dx = 0; dy = 1; break;
        case VK_LEFT: dx = -1; dy = 0; break;
        case VK_RIGHT: dx = 1; dy = 0; break;
	}
}


void __fastcall TForm1::StartGameClick(TObject *Sender)
{
 new_game();
}

 void __fastcall TForm1::FormCreate(TObject *Sender)
{
	new_game();
}


void __fastcall TForm1::ExitClick(TObject *Sender)
{Close();}
//Уровни сложности
//лёгкая
void __fastcall TForm1::EasyClick(TObject *Sender)
{ Timer1->Interval = 150;
  Easy->Checked = true;
  Medium->Checked = false;
  Hard->Checked = false;}
//средняя
void __fastcall TForm1::MediumClick(TObject *Sender)
{ Timer1->Interval = 100;
   Medium->Checked = true;
   Easy->Checked = false;
   Hard->Checked = false;}
//тяжёлый
void __fastcall TForm1::HardClick(TObject *Sender)
{Timer1->Interval = 50;
   Hard->Checked = true;
   Easy->Checked = false;
   Medium->Checked = false;}
// Открытие второго окна "Как играть?"
void __fastcall TForm1::HowToPlayClick(TObject *Sender)
{Form2->ShowModal();}
//Открытие третьего окна "Об авторе"
void __fastcall TForm1::AboutClick(TObject *Sender)
{ Form3->ShowModal();}

//---------------------------------------------------------------------------




